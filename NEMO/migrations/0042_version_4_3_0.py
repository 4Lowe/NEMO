# Generated by Django 3.2.14 on 2022-09-06 17:54

import datetime

import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models

from NEMO.migrations_utils import create_news_for_version


class Migration(migrations.Migration):

    dependencies = [
        ('NEMO', '0041_version_4_2_1'),
    ]

    def new_version_news(apps, schema_editor):
        create_news_for_version(apps, "4.3.0", "")

    def migrate_qualifications(apps, schema_editor):
        User = apps.get_model("NEMO", "User")
        Qualification = apps.get_model("NEMO", "Qualification")
        for user in User.objects.all():
            for tool in user.qualifications.all():
                Qualification.objects.create(tool=tool, user=user)

    operations = [
        migrations.RunPython(new_version_news),
        migrations.AddField(
            model_name='interlock',
            name='unit_id',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='interlock',
            name='most_recent_reply_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='email_send_access_expiration_emails',
            field=models.BooleanField(default=True, help_text='Send access expiration emails to my alternate email'),
        ),
        migrations.AddField(
            model_name='user',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualified_on', models.DateField(default=datetime.date.today)),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NEMO.tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(migrate_qualifications),
        migrations.AddField(
            model_name='user',
            name='tool_qualifications',
            field=models.ManyToManyField(blank=True, help_text='Select the tools that the user is qualified to use.', through='NEMO.Qualification', to='NEMO.Tool'),
        ),
        migrations.RemoveField(model_name='user', name='qualifications'),
        migrations.RenameField(
            model_name='user',
            old_name='tool_qualifications',
            new_name='qualifications',
        ),
        migrations.AlterModelTable(
            name='qualification',
            table='NEMO_user_qualifications',
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='email_send_tool_qualification_expiration_emails',
            field=models.BooleanField(default=True, help_text='Send tool qualification expiration emails to my alternate email'),
        ),
        migrations.AlterModelOptions(
            name='account',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='accounttype',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='alertcategory',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Alert categories'},
        ),
        migrations.AlterModelOptions(
            name='chemical',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='chemicalhazard',
            options={'ordering': ['display_order', django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='closure',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='configuration',
            options={'ordering': ['tool', django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='consumable',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='consumablecategory',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Consumable categories'},
        ),
        migrations.AlterModelOptions(
            name='contactinformation',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Contact information'},
        ),
        migrations.AlterModelOptions(
            name='contactinformationcategory',
            options={'ordering': ['display_order', django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Contact information categories'},
        ),
        migrations.AlterModelOptions(
            name='customization',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='interlockcardcategory',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Interlock card categories'},
        ),
        migrations.AlterModelOptions(
            name='physicalaccesslevel',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='reservationquestions',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Reservation questions'},
        ),
        migrations.AlterModelOptions(
            name='resource',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='resourcecategory',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'resource categories'},
        ),
        migrations.AlterModelOptions(
            name='scheduledoutagecategory',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Scheduled outage categories'},
        ),
        migrations.AlterModelOptions(
            name='staffabsencetype',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='staffavailability',
            options={'ordering': [django.db.models.functions.text.Lower('staff_member__first_name')], 'verbose_name_plural': 'Staff availability'},
        ),
        migrations.AlterModelOptions(
            name='staffavailabilitycategory',
            options={'ordering': ['display_order', django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Staff availability categories'},
        ),
        migrations.AlterModelOptions(
            name='taskcategory',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'Task categories'},
        ),
        migrations.AlterModelOptions(
            name='taskstatus',
            options={'ordering': [django.db.models.functions.text.Lower('name')], 'verbose_name_plural': 'task statuses'},
        ),
        migrations.AlterModelOptions(
            name='tool',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterModelOptions(
            name='toolusagecounter',
            options={'ordering': [django.db.models.functions.text.Lower('tool__name')]},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': [django.db.models.functions.text.Lower('first_name')], 'permissions': (('trigger_timed_services', 'Can trigger timed services'), ('use_billing_api', 'Can use billing API'), ('kiosk', 'Kiosk services'))},
        ),
        migrations.AlterModelOptions(
            name='usertype',
            options={'ordering': [django.db.models.functions.text.Lower('name')]},
        ),
        migrations.AlterField(
            model_name='alert',
            name='contents',
            field=models.TextField(),
        ),
    ]

