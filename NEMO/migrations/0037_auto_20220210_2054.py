# Generated by Django 2.2.27 on 2022-02-11 01:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('NEMO', '0036_version_3_15_0'),
    ]

    def migrate_exceptions_to_closures(apps, schema_editor):
        Closure = apps.get_model("NEMO", "Closure")
        ClosureTime = apps.get_model("NEMO", "ClosureTime")
        try:
            for closure in Closure.objects.all():
                ClosureTime.objects.create(closure=closure, start_time=closure.start_time, end_time=closure.end_time)
        except:
            pass

    operations = [
        migrations.RenameModel(old_name='PhysicalAccessException', new_name='Closure'),
        migrations.AlterField(
            model_name='closure',
            name='name',
            field=models.CharField(help_text='The name of this closure, that will be displayed as the policy problem and alert (if applicable)', max_length=255),
        ),
        migrations.CreateModel(
            name='ClosureTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(help_text='The start date and time of the closure')),
                ('end_time', models.DateTimeField(help_text='The end date and time of the closure')),
                ('closure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NEMO.Closure')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.RunPython(migrate_exceptions_to_closures),
        migrations.AlterModelOptions(
            name='closure',
            options={'ordering': ['name']},
        ),
        migrations.RemoveField(
            model_name='closure',
            name='end_time',
        ),
        migrations.RemoveField(
            model_name='closure',
            name='start_time',
        ),
        migrations.AddField(
            model_name='closure',
            name='alert_days_before',
            field=models.PositiveIntegerField(blank=True, help_text='Enter the number of days before the closure when an alert should automatically be created. Leave blank for no alert.', null=True),
        ),
        migrations.AddField(
            model_name='closure',
            name='alert_template',
            field=models.TextField(blank=True, help_text='The template to create the alert with. The following variables are provided (when applicable): <b>name</b>, <b>start_time</b>, <b>end_time</b>, <b>areas</b>.', null=True),
        ),
        migrations.AddField(
            model_name='closure',
            name='staff_absent',
            field=models.BooleanField(default=False, help_text='Check this box and all staff members will be marked absent during this closure in staff status.'),
        ),
        migrations.AlterField(
            model_name='closure',
            name='name',
            field=models.CharField(help_text='The name of this closure, that will be displayed as the policy problem and alert (if applicable).', max_length=255),
        ),
        migrations.AlterField(
            model_name='closure',
            name='physical_access_levels',
            field=models.ManyToManyField(blank=True, help_text='Select access levels this closure applies to.', to='NEMO.PhysicalAccessLevel'),
        ),
        migrations.AddField(
            model_name='closure',
            name='notify_managers_last_occurrence',
            field=models.BooleanField(default=False, help_text='Check this box to notify facility managers on the last occurrence of this closure.'),
        ),
    ]
