# Generated by Django 3.2.18 on 2023-02-24 18:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('NEMO', '0045_version_4_5_0'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='userpreferences',
            name='display_new_buddy_request_reply_notification',
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='email_new_adjustment_request_reply',
            field=models.BooleanField(default=True, help_text='Whether or not to email the user of replies on adjustment request he commented on', verbose_name='email_new_adjustment_request_reply'),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='email_send_adjustment_request_updates',
            field=models.PositiveIntegerField(choices=[(1, 'Both emails'), (2, 'Main email only')], default=1, help_text='Adjustment request updates'),
        ),
        migrations.AlterField(
            model_name='emaillog',
            name='category',
            field=models.IntegerField(choices=[(0, 'General'), (1, 'System'), (2, 'Direct Contact'), (3, 'Broadcast Email'), (4, 'Timed Services'), (5, 'Feedback'), (6, 'Abuse'), (7, 'Safety'), (8, 'Tasks'), (9, 'Access Requests'), (10, 'Sensors'), (11, 'Adjustment Requests')], default=0),
        ),
        migrations.AlterField(
            model_name='landingpagechoice',
            name='notifications',
            field=models.CharField(blank=True, choices=[('news', 'News creation and updates - notifies all users'), ('safetyissue', 'New safety issues - notifies staff only'), ('buddyrequest', 'New buddy request - notifies all users'), ('buddyrequestmessage', 'New buddy request reply - notifies request creator and users who have replied'), ('adjustmentrequest', 'New adjustment request - notifies facility managers only'), ('adjustmentrequestmessage', 'New adjustment request reply - notifies request creator and users who have replied'), ('temporaryphysicalaccessrequest', 'New access request - notifies other users on request and reviewers')], help_text="Displays a the number of new notifications for the user. For example, if the user has two unread news notifications then the number '2' would appear for the news icon on the landing page.", max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('news', 'News creation and updates - notifies all users'), ('safetyissue', 'New safety issues - notifies staff only'), ('buddyrequest', 'New buddy request - notifies all users'), ('buddyrequestmessage', 'New buddy request reply - notifies request creator and users who have replied'), ('adjustmentrequest', 'New adjustment request - notifies facility managers only'), ('adjustmentrequestmessage', 'New adjustment request reply - notifies request creator and users who have replied'), ('temporaryphysicalaccessrequest', 'New access request - notifies other users on request and reviewers')], max_length=100),
        ),
        migrations.CreateModel(
            name='AdjustmentRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(auto_now_add=True, help_text='The date and time when the request was created.')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='The last time this request was modified.')),
                ('item_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, help_text='The description of the request.', null=True)),
                ('manager_note', models.TextField(blank=True, help_text="A manager's note to send to the user when a request is denied or to the user office when it is approved.", null=True)),
                ('new_start', models.DateTimeField(blank=True, null=True)),
                ('new_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Approved'), (2, 'Denied')], default=0)),
                ('deleted', models.BooleanField(default=False, help_text="Indicates the request has been deleted and won't be shown anymore.")),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustment_requests_created', to=settings.AUTH_USER_MODEL)),
                ('item_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('last_updated_by', models.ForeignKey(blank=True, help_text='The last user who modified this request.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adjustment_requests_updated', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='adjustment_requests_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-creation_time'],
            },
        ),
    ]
